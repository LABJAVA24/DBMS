CREATE TABLE std1 (

    regno VARCHAR(20) PRIMARY KEY,

    name VARCHAR(20),

    class VARCHAR(20),

    bdate DATE,

    marks1 INT,

    marks2 INT,

    marks3 INT

);



-- Insert Data

INSERT INTO std1 VALUES ('1', 'adil', 'BSC', TO_DATE('12-JUN-2004', 'DD-MON-YYYY'), 50, 70, 90);

INSERT INTO std1 VALUES ('2', 'fayaz', 'BSC', TO_DATE('13-JUN-2003', 'DD-MON-YYYY'), 80, 80, 50);

INSERT INTO std1 VALUES ('3', 'kaif', 'BED', TO_DATE('14-JUN-2001', 'DD-MON-YYYY'), 60, 60, 80);

INSERT INTO std1 VALUES ('4', 'ahti', 'BSE', TO_DATE('15-JUN-2002', 'DD-MON-YYYY'), 40, 50, 50);

INSERT INTO std1 VALUES ('5', 'ehab', 'BSC', TO_DATE('16-JUN-2001', 'DD-MON-YYYY'), 70, 40, 70);



SELECT * FROM std1 WHERE name = 'kaif';



SELECT * FROM std1 ORDER BY class ASC;



SELECT regno, name, marks1 

FROM std1

GROUP BY regno, name, marks1

HAVING marks1 > 65;



SELECT class FROM std1 GROUP BY class;

SELECT SUM(marks1) FROM std1;



SELECT AVG(marks1) FROM std1;



SELECT COUNT(regno) FROM std1;



SELECT * FROM std1 WHERE class LIKE 'BSE';



SELECT * FROM std1 WHERE marks1 BETWEEN 80 AND 90;



SELECT MIN(marks1) AS lowest_marks FROM std1;

SELECT MAX(marks1) AS highest_marks FROM std1;



-- Insert new data

INSERT INTO std1 VALUES ('6', 'ali', 'BSC', TO_DATE('17-JUN-2002', 'DD-MON-YYYY'), 85, 75, 65);



-- Commit the transaction to save the changes

COMMIT;



-- Rollback the changes made by the previous insert (undo the insert)

ROLLBACK;



-- PL/SQL

DECLARE

   -- Declare a user-defined exception

   invalid_marks EXCEPTION;



   -- Variable to hold the student's marks

   marks INT;



BEGIN

   -- Simulate input for marks (you can change this value to test different scenarios)

   marks := 80; 



   -- Check if marks are invalid (for example, negative or greater than 100)

   IF marks < 0 OR marks > 100 THEN

      -- Raise the user-defined exception

      RAISE invalid_marks;

   END IF;



   -- If the marks are valid, display them

   DBMS_OUTPUT.PUT_LINE('The student marks are: ' || marks);



EXCEPTION

   -- Exception handler for the user-defined exception

   WHEN invalid_marks THEN

      DBMS_OUTPUT.PUT_LINE('Error: Invalid marks! Marks should be between 0 and 100.');

   WHEN OTHERS THEN

      DBMS_OUTPUT.PUT_LINE('An unexpected error occurred: ' || SQLERRM);

END;

/ 
