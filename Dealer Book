CREATE TABLE AUTHOR (

    AID VARCHAR2(20) PRIMARY KEY,

    ANAME VARCHAR2(20),

    ACITY VARCHAR2(20),

    ACOUNTRY VARCHAR2(20)

);



CREATE TABLE PUBLISHER (

    PID VARCHAR2(20) PRIMARY KEY,

    PNAME VARCHAR2(20),

    PCITY VARCHAR2(20),

    PCOUNTRY VARCHAR2(20)

);



CREATE TABLE CATEGORY (

    CID VARCHAR2(20) PRIMARY KEY,

    DESCRIPTION VARCHAR2(20)

);



CREATE TABLE CATALOGG (

    BID VARCHAR2(20) PRIMARY KEY,

    BTITLE VARCHAR2(20),

    AID VARCHAR2(20),

    PID VARCHAR2(20),

    CID VARCHAR2(20),

    BYEAR NUMBER(10),

    BPRICE NUMBER(10),

    FOREIGN KEY (AID) REFERENCES AUTHOR(AID),

    FOREIGN KEY (PID) REFERENCES PUBLISHER(PID),

    FOREIGN KEY (CID) REFERENCES CATEGORY(CID)

);



CREATE TABLE ORDERS (

    ONO VARCHAR2(20) PRIMARY KEY,

    BID VARCHAR2(20),

    BQTY NUMBER(10),

    FOREIGN KEY (BID) REFERENCES CATALOGG(BID)

);



INSERT INTO AUTHOR VALUES('A1', 'Author One', 'City1', 'Country1');

INSERT INTO AUTHOR VALUES('A2', 'Author Two', 'City2', 'Country2');

INSERT INTO AUTHOR VALUES('A3', 'Author Three', 'City3', 'Country3');

INSERT INTO AUTHOR VALUES('A4', 'Author Four', 'City4', 'Country4');

INSERT INTO AUTHOR VALUES('A5', 'Author Five', 'City5', 'Country5');



INSERT INTO PUBLISHER VALUES('P1', 'Publisher One', 'CityA', 'CountryA');

INSERT INTO PUBLISHER VALUES('P2', 'Publisher Two', 'CityB', 'CountryB');

INSERT INTO PUBLISHER VALUES('P3', 'Publisher Three', 'CityC', 'CountryC');

INSERT INTO PUBLISHER VALUES('P4', 'Publisher Four', 'CityD', 'CountryD');

INSERT INTO PUBLISHER VALUES('P5', 'Publisher Five', 'CityE', 'CountryE');



INSERT INTO CATEGORY VALUES('C1', 'Fiction');

INSERT INTO CATEGORY VALUES('C2', 'Non-Fiction');

INSERT INTO CATEGORY VALUES('C3', 'Science');

INSERT INTO CATEGORY VALUES('C4', 'Fantasy');

INSERT INTO CATEGORY VALUES('C5', 'Biography');



INSERT INTO CATALOGG VALUES('B1', 'Book One', 'A1', 'P1', 'C1', 2010, 200);

INSERT INTO CATALOGG VALUES('B2', 'Book Two', 'A2', 'P2', 'C2', 2012, 250);

INSERT INTO CATALOGG VALUES('B3', 'Book Three', 'A3', 'P3', 'C3', 2015, 300);

INSERT INTO CATALOGG VALUES('B4', 'Book Four', 'A4', 'P4', 'C4', 2018, 350);

INSERT INTO CATALOGG VALUES('B5', 'Book Five', 'A5', 'P5', 'C5', 2020, 400);



INSERT INTO ORDERS VALUES('O1', 'B1', 10);

INSERT INTO ORDERS VALUES('O2', 'B2', 15);

INSERT INTO ORDERS VALUES('O3', 'B3', 20);

INSERT INTO ORDERS VALUES('O4', 'B4', 25);

INSERT INTO ORDERS VALUES('O5', 'B5', 30);



SELECT * FROM AUTHOR;

SELECT * FROM PUBLISHER;

SELECT * FROM CATEGORY;

SELECT * FROM CATALOGG;

SELECT * FROM ORDERS;



SELECT * FROM AUTHOR

WHERE AID IN (

    SELECT CATALOGG.AID

    FROM CATALOGG

    WHERE CATALOGG.BYEAR > 2000

    GROUP BY CATALOGG.AID

    HAVING COUNT(CATALOGG.AID) >= 2

    AND SUM(CATALOGG.BPRICE) > (SELECT AVG(BPRICE) FROM CATALOGG)

);



SELECT CATALOGG.AID

FROM CATALOGG, ORDERS

WHERE ORDERS.BID = CATALOGG.BID

AND ORDERS.BQTY = (SELECT MAX(BQTY) FROM ORDERS);





UPDATE CATALOGG

SET BPRICE = BPRICE + (BPRICE * 0.10)

WHERE PID = (SELECT PID FROM PUBLISHER WHERE PNAME = 'Publisher One');

-- PL/SQL

-- Creating the function

CREATE OR REPLACE FUNCTION calculate_bonus_salary (

    p_salary IN NUMBER,

    p_bonus_percentage IN NUMBER

) RETURN NUMBER IS

    v_new_salary NUMBER;

BEGIN

    -- Calculate new salary by applying bonus percentage

    v_new_salary := p_salary + (p_salary * p_bonus_percentage / 100);

    

    -- Return the new salary

    RETURN v_new_salary;

END;

/

-- Calling the function in a SELECT statement to get the new salary

SELECT calculate_bonus_salary(50000, 10) AS new_salary FROM dual;
