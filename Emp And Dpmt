-- Create the departments table

CREATE TABLE departments

(

    deptno INT PRIMARY KEY,

    dname VARCHAR(10),

    manager_id INT

);



-- Create the employees table with a foreign key reference to departments

CREATE TABLE employees

(

    empid VARCHAR(10) PRIMARY KEY,

    ename VARCHAR(10),

    age INT,

    salary INT,

    deptno INT,

    FOREIGN KEY (deptno) REFERENCES departments(deptno)

);



-- Insert 5 tuples into the departments table

INSERT INTO departments VALUES (1, 'finance', 12);

INSERT INTO departments VALUES (2, 'HR', 11);

INSERT INTO departments VALUES (3, 'Accounting', 16);

INSERT INTO departments VALUES (4, 'Marketing', 17);

INSERT INTO departments VALUES (5, 'sales', 18);



-- Display all records from the departments table

SELECT * FROM departments;



-- Insert 5 tuples into the employees table

INSERT INTO employees VALUES (1, 'vaseel', 18, 16000, 1);

INSERT INTO employees VALUES (2, 'zaaki', 18, 17000, 2);

INSERT INTO employees VALUES (3, 'faraz', 23, 500000, 2);

INSERT INTO employees VALUES (4, 'Ahtisham', 22, 35000, 3);

INSERT INTO employees VALUES (5, 'Rabay', 22, 40000, 3);



-- Display all records from the employees table

SELECT * FROM employees;



SELECT empid, ename 

FROM employees 

WHERE salary BETWEEN 10000 AND 50000;



SELECT ename, salary 

FROM employees 

WHERE deptno = (SELECT deptno FROM departments WHERE dname = 'HR');



SELECT e.ename, d.dname

FROM employees e

JOIN departments d ON e.deptno = d.deptno;





-- PL/SQL

DECLARE

    -- Declare variables for the new employee details

    v_empid VARCHAR2(10) := '6'; 

    v_ename VARCHAR2(50) := 'John Doe';

    v_age INT := 30;

    v_salary INT := 55000;

    v_deptno INT := 2; -- Assuming department 2 exists (for example, HR department)

BEGIN

    -- Insert the new employee into the employees table

    INSERT INTO employees (empid, ename, age, salary, deptno)

    VALUES (v_empid, v_ename, v_age, v_salary, v_deptno);



    -- Commit the transaction to save the changes

    COMMIT;

    -- Display success message

    DBMS_OUTPUT.PUT_LINE('Employee inserted successfully!');

EXCEPTION

    WHEN OTHERS THEN

        -- In case of an error, rollback the transaction and display the error

        ROLLBACK;

        DBMS_OUTPUT.PUT_LINE('Error occurred: ' || SQLERRM);

END;

/
